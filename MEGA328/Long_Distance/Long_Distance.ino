#define ARR_MAX 2000  //加减速步数
const unsigned short AccStep[ARR_MAX]PROGMEM=
{
1560,1560,1560,1560,1560,1558,1558,1558,1558,1558,
1555,1555,1555,1555,1553,1553,1553,1553,1553,1550,
1550,1550,1550,1548,1548,1548,1548,1548,1546,1546,
1546,1546,1543,1543,1543,1543,1541,1541,1541,1541,
1538,1538,1538,1538,1536,1536,1536,1536,1534,1534,
1534,1534,1531,1531,1531,1531,1529,1529,1529,1529,
1527,1527,1527,1524,1524,1524,1524,1522,1522,1522,
1522,1520,1520,1520,1517,1517,1517,1517,1515,1515,
1515,1513,1513,1513,1511,1511,1511,1508,1508,1508,
1508,1506,1506,1506,1504,1504,1504,1502,1502,1502,

1499,1499,1499,1497,1497,1497,1495,1495,1495,1493,
1493,1493,1490,1490,1490,1488,1488,1486,1486,1486,
1484,1484,1484,1481,1481,1481,1479,1479,1477,1477,
1477,1475,1475,1475,1473,1473,1471,1471,1471,1468,
1468,1466,1466,1466,1464,1464,1462,1462,1462,1460,
1460,1458,1458,1456,1456,1456,1453,1453,1451,1451,
1449,1449,1447,1447,1447,1445,1445,1443,1443,1441,
1441,1439,1439,1437,1437,1435,1435,1435,1433,1433,
1431,1431,1429,1429,1427,1427,1425,1425,1422,1422,
1420,1420,1418,1418,1416,1416,1414,1412,1412,1410,

1410,1408,1408,1406,1406,1404,1404,1403,1403,1401,
1399,1399,1397,1397,1395,1395,1393,1391,1391,1389,
1389,1387,1385,1385,1383,1383,1381,1379,1379,1377,
1377,1376,1374,1374,1372,1370,1370,1368,1368,1366,
1364,1364,1362,1361,1361,1359,1357,1357,1355,1353,
1353,1351,1350,1350,1348,1346,1344,1344,1342,1340,
1340,1339,1337,1335,1335,1333,1332,1332,1330,1328,
1326,1326,1325,1323,1321,1321,1319,1318,1316,1314,
1314,1312,1311,1309,1307,1307,1305,1304,1302,1300,
1300,1299,1297,1295,1294,1292,1292,1290,1289,1287,

1285,1284,1282,1282,1280,1279,1277,1276,1274,1272,
1271,1269,1269,1267,1266,1264,1263,1261,1259,1258,
1256,1255,1253,1252,1250,1248,1247,1245,1244,1242,
1241,1239,1238,1236,1235,1233,1232,1230,1229,1227,
1225,1224,1222,1221,1220,1218,1217,1215,1214,1212,
1211,1208,1206,1205,1203,1202,1200,1199,1198,1196,
1193,1192,1190,1189,1188,1186,1183,1182,1181,1179,
1178,1176,1174,1172,1171,1170,1167,1166,1164,1163,
1160,1159,1157,1156,1153,1152,1151,1149,1147,1145,
1144,1142,1140,1139,1136,1135,1134,1131,1130,1129,

1126,1125,1124,1121,1120,1117,1116,1115,1112,1111,
1109,1107,1105,1104,1101,1100,1099,1096,1095,1093,
1092,1089,1088,1086,1085,1082,1080,1079,1076,1075,
1073,1072,1070,1068,1066,1064,1063,1060,1058,1057,
1055,1054,1052,1049,1048,1046,1044,1043,1041,1038,
1036,1035,1033,1031,1030,1028,1026,1024,1022,1020,
1018,1016,1014,1013,1011,1009,1007,1005,1003,1002,
1000,998,996,994,992,990,988,986,984,982,
981,979,978,976,974,972,970,968,966,964,
962,961,958,956,954,952,951,949,947,945,
943,942,939,937,935,934,932,930,928,926,
924,923,921,918,917,915,913,911,909,907,
905,903,902,899,898,896,894,892,890,888,
887,884,883,880,879,877,875,873,871,870,
867,866,864,862,860,858,856,854,853,850,
849,847,845,843,841,839,838,835,833,832,
830,828,826,824,822,820,818,816,815,813,
811,809,807,805,804,802,800,798,796,794,
792,791,789,787,785,783,781,779,778,776,
774,772,770,769,767,765,763,761,759,758,
756,754,752,750,749,747,745,743,741,740,
737,736,734,732,730,729,727,725,723,722,
720,718,716,714,713,711,709,707,706,704,
702,700,699,697,695,693,692,690,688,686,
684,683,681,679,678,676,674,672,671,669,
668,666,664,662,661,659,657,656,654,652,
651,649,647,646,644,642,641,639,637,636,
634,632,631,629,627,626,624,623,621,619,
618,616,614,613,611,609,608,606,605,603,
602,600,598,597,595,594,592,591,589,588,
586,584,583,581,580,578,577,575,574,572,
570,569,568,566,564,563,561,560,558,557,
556,554,552,551,549,548,547,545,544,542,
541,539,538,536,535,534,532,531,529,528,
527,525,524,522,521,519,518,517,515,514,
513,511,510,508,507,506,504,503,502,500,
499,498,496,495,494,492,491,490,488,487,
486,484,483,482,481,479,478,477,475,474,
473,471,470,469,468,466,465,464,463,461,
460,459,458,457,455,454,453,452,450,449,
448,447,446,444,443,442,441,440,439,437,
436,435,434,433,432,430,429,428,427,426,
425,424,423,422,420,419,418,417,416,415,
414,413,412,411,410,408,407,406,405,404,
403,402,401,400,399,398,397,396,395,394,
393,392,391,390,389,388,387,386,385,384,
383,382,381,380,379,378,377,376,375,374,
373,372,371,370,369,368,367,366,365,365,
364,363,362,361,360,359,358,357,356,355,
355,354,353,352,351,350,349,349,348,347,
346,345,344,343,343,342,341,340,339,338,
338,337,336,335,334,334,333,332,331,330,
329,329,328,327,326,326,325,324,323,322,
322,321,320,319,319,318,317,316,316,315,
314,314,313,312,311,311,310,309,309,308,
307,306,306,305,304,304,303,302,302,301,
300,299,299,298,298,297,296,296,295,294,
294,293,292,292,291,290,290,289,288,288,
287,287,286,285,285,284,284,283,282,282,
281,281,280,279,279,278,278,277,276,276,
275,275,274,274,273,272,272,271,271,270,
270,269,269,268,267,267,266,266,265,265,
264,264,263,263,262,262,261,261,260,260,
259,259,258,258,257,257,256,256,255,255,
254,254,253,253,252,252,251,251,250,250,
249,249,248,248,247,247,247,246,246,245,
245,244,244,243,243,243,242,242,241,241,
240,240,240,239,239,238,238,238,237,237,
236,236,235,235,235,234,234,233,233,233,
232,232,232,231,231,230,230,230,229,229,
229,228,228,227,227,227,226,226,226,225,
225,225,224,224,223,223,223,222,222,222,
221,221,221,220,220,220,219,219,219,218,
218,218,217,217,217,216,216,216,216,215,
215,215,214,214,214,213,213,213,212,212,
212,212,211,211,211,210,210,210,210,209,
209,209,208,208,208,208,207,207,207,206,
206,206,206,205,205,205,205,204,204,204,
204,203,203,203,203,202,202,202,201,201,
201,201,201,200,200,200,200,199,199,199,
199,198,198,198,198,197,197,197,197,197,
196,196,196,196,195,195,195,195,195,194,
194,194,194,193,193,193,193,193,192,192,
192,192,192,191,191,191,191,191,190,190,
190,190,190,189,189,189,189,189,189,188,
188,188,188,188,187,187,187,187,187,186,
186,186,186,186,186,185,185,185,185,185,
185,184,184,184,184,184,184,183,183,183,
183,183,183,182,182,182,182,182,182,181,
181,181,181,181,181,181,180,180,180,180,
180,180,180,179,179,179,179,179,179,179,
178,178,178,178,178,178,178,177,177,177,
177,177,177,177,177,176,176,176,176,176,
176,176,176,175,175,175,175,175,175,175,
175,174,174,174,174,174,174,174,174,173,
173,173,173,173,173,173,173,173,172,172,
172,172,172,172,172,172,172,171,171,171,
171,171,171,171,171,171,171,170,170,170,
170,170,170,170,170,170,170,169,169,169,
169,169,169,169,169,169,169,169,168,168,
168,168,168,168,168,168,168,168,168,167,
167,167,167,167,167,167,167,167,167,167,
167,166,166,166,166,166,166,166,166,166,
166,166,166,166,165,165,165,165,165,165,
165,165,165,165,165,165,165,164,164,164,
164,164,164,164,164,164,164,164,164,164,
164,163,163,163,163,163,163,163,163,163,
163,163,163,163,163,163,163,162,162,162,
162,162,162,162,162,162,162,162,162,162,
162,162,162,161,161,161,161,161,161,161,
161,161,161,161,161,161,161,161,161,161,
161,161,160,160,160,160,160,160,160,160,
160,160,160,160,160,160,160,160,160,160,
160,160,159,159,159,159,159,159,159,159,
159,159,159,159,159,159,159,159,159,159,
159,159,159,159,159,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,
158,158,158,158,158,158,158,158,158,158,
157,157,157,157,157,157,157,157,157,157,
157,157,157,157,157,157,157,157,157,157,
157,157,157,157,157,157,157,157,156,156,
156,156,156,156,156,156,156,156,156,156,
156,156,156,156,156,156,156,156,156,156,
156,156,156,156,156,156,156,156,156,156,
156,155,155,155,155,155,155,155,155,155,
155,155,155,155,155,155,155,155,155,155,
155,155,155,155,155,155,155,155,155,155,
155,155,155,155,155,155,155,155,155,155,
155,155,154,154,154,154,154,154,154,154,
154,154,154,154,154,154,154,154,154,154,
154,154,154,154,154,154,154,154,154,154,
154,154,154,154,154,154,154,154,154,154,
154,154,154,154,154,154,154,154,154,154,
154,154,153,153,153,153,153,153,153,153,
153,153,153,153,153,153,153,153,153,153,
153,153,153,153,153,153,153,153,153,153,
153,153,153,153,153,153,153,153,153,153,
153,153,153,153,153,153,153,153,153,153,
153,153,153,153,153,153,153,153,153,153,
153,153,153,153,153,153,153,153,153,153,
152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,
152,151,151,151,151,151,151,151,151,151,
151,151,151,151,151,151,151,151,151,151,
151,151,151,151,151,151,151,151,151,151,
151,151,151,151,151,151,151,151,151,151,
151,151,151,151,151,151,151,151,151,151,
151,151,151,151,151,151,151,151,151,151,
151,151,151,151,151,151,151,151,151,151,
151,151,151,151,151,151,151,151,151,151,
151,151,151,151,151,151,151,151,151,151,
151,151,151,151,151,151,151,151,151,151,
} ;//生成的加减速数组
// PROGMEM

//LED: PB4/PB5/PC2/PC3
#define Set_Bit(val, bitn)    (val |=(1<<(bitn)))
#define Clr_Bit(val, bitn)     (val&=~(1<<(bitn)))
#define Get_Bit(val, bitn)    (val &(1<<(bitn)) )
//MS PD2/3/4
//SETP PD6,PWM接口
//DIR PD5
//EN PB0
//LIMIT PB1
#define DEV_ID 0x01

#define LedRed1 Set_Bit(PORTB,4);Set_Bit(PORTC,3)
#define LedRed0 Clr_Bit(PORTB,4);Clr_Bit(PORTC,3)
#define LedGreen1 Set_Bit(PORTB,5);Set_Bit(PORTC,2)
#define LedGreen0 Clr_Bit(PORTB,5);Clr_Bit(PORTC,2)

#define Limit (PINB & 0x02) == 0x02
#define DisableMotor Set_Bit(PORTB,0)
#define EnableMotor Clr_Bit(PORTB,0)

#define MotorP1 Set_Bit(PORTD,6)
#define MotorP0 Clr_Bit(PORTD,6)
#define MotorD1 Set_Bit(PORTD,5)
#define MotorD0 Clr_Bit(PORTD,5)
#define MS1_1 Set_Bit(PORTD,2)
#define MS1_0 Clr_Bit(PORTD,2)
#define MS2_1 Set_Bit(PORTD,3)
#define MS2_0 Clr_Bit(PORTD,3)
#define MS3_1 Set_Bit(PORTD,4)
#define MS3_0 Clr_Bit(PORTD,4)

#define ACCEL   1  //电机运行状态标志位
#define DECEL   2
#define RUN     3
#define STOP   0
unsigned long step_count;  //步数计数
int acc_count;      //加速计数
int dcc_count;      //减速计数
uint8_t flag = STOP;//开始时的状态

int Dir,Speed,Distance;

 void serialEvent()//串口接收
{
  static int aa = 0,i = 0;
  int Rec,Val,Buff[10];
  while(Serial.available())
  {
    Rec = Serial.read();
    if(Rec == 0xaa)//接收第一个字节 起始位
      aa=0x80;
    if(aa==0x80)
      Buff[i++]=Rec;
    if((i==6)&&(Buff[5]==0xff))//校验终止位
    {
      i=0;
      aa=0;
      Val = Buff[1]+Buff[2]+Buff[3];
      if(Val == Buff[4])
      {
        Dir = Buff[1];
        Speed = Buff[2];
        Distance = Buff[3];
      }
    }
  }
  flag = ACCEL; //等到下一个数据进入后进入加速状态
  EnableMotor;//使能电机
  SetSteps(Dir,Distance);//设置电机方向和步数
}
void setup()//初始化
{
  DDRC = 0xff;//c端口初始化为输出
  DDRB = 0xff;
  PORTB = 0xff;//b端口初始化为高电平
  LedGreen1;
  LedRed0;
  DisableMotor;//驱动失能
  MS1_0;
  MS2_1;
  MS3_0;//
  Serial.begin(4800);
}
void SetSteps(int DIR,unsigned int DISTANCE)//运行步数
{
  if(DIR>0)
    MotorD0;      //设定电机运行方向
  else
    MotorD1;
  step_count = (DISTANCE*2000);
  
}
int Time = 0,NowTime = 0;
void Pulse()//产生脉冲
{
  switch(flag)  //查询状态
  {
    case STOP  :
  {
      acc_count =0;
      step_count = 0;
      dcc_count = ARR_MAX-1;
    DisableMotor;//电机失能
    }break;
    
    case ACCEL :
  {
      acc_count++;
      step_count--;
    
      MotorP1; //输出一个脉冲
    delayMicroseconds(20);
      MotorP0;
    
      NowTime =  pgm_read_word_near(&AccStep[acc_count])*5;//查表
      if(acc_count == ARR_MAX-1) 
      flag = RUN;
    }break;
 
    case RUN   :
  {
      step_count--;
    
      MotorP1; //输出一个脉冲
    delayMicroseconds(20);
      MotorP0;
    NowTime =  pgm_read_word_near(&AccStep[ARR_MAX-1])*5;//查表
      if(step_count == ARR_MAX-1) //减到进入减速步数范围
      {
        flag = DECEL;
      } 
    }break;
    case DECEL :
  {
      dcc_count--;
      step_count--;
      
      MotorP1; //输出一个脉冲
    delayMicroseconds(20);
      MotorP0;

      
      NowTime =  pgm_read_word_near(&AccStep[dcc_count])*5;
      if(acc_count == 0 || step_count==0)
    {     
      flag = STOP;
    }
    }break;
  }
}
void loop() 
{

    while(NowTime--);
    Pulse();//产生脉冲函数
}
